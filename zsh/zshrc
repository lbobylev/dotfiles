set -o vi
# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
# Amazon Q pre block. Keep at the top of this file.
# 
# If you come from bash you might have to change your $PATH.
export PATH=/Users/leonid/.cache/lm-studio/bin:/opt/homebrew/sbin:$HOME/go/bin:$HOME/bin:$HOME/.local/bin:/usr/local/bin:/opt/homebrew/bin:$HOME/.nvm/versions/node/v18.20.3/bin:$PATH

export OPENAI_API_KEY=$(cat ~/.openai)
export PERPLEXITY_API_KEY=$(cat ~/.perplexity)
export BRAVESEARCH_API_KEY=$(cat ~/.bravesearch)
export ANTHROPIC_API_KEY=$(cat ~/.anthropic)
export CROWDIN_API_TOKEN=$(cat ~/.crowdin)
export GEMINI_API_KEY=$(cat ~/.gemini)
export LM_STUDIO_API_KEY=
export LM_STUDIO_API_BASE=http://localhost:1234/v1/

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="robbyrussell"

plugins=(git kubectl)

source $ZSH/oh-my-zsh.sh
source /opt/homebrew/opt/kube-ps1/share/kube-ps1.sh

KUBE_PS1_SYMBOL_ENABLE=false
KUBE_PS1_NS_ENABLE=false
KUBE_PS1_PREFIX=''
KUBE_PS1_SUFFIX=' '
PS1='$(kube_ps1)'$PS1

function kx_fn() {
    local context=$1
    local subscription
    if [ "$context" = "dev" ]; then
        subscription="dev"
    else
        vpnutil start "DedicatedVPN"
        subscription="prod"
    fi
    az account set --subscription="$subscription"
    kubectx "$context"
}
alias kx="kx_fn"

alias vim="nvim"
alias gtd="git diff"
alias gtc="git commit -m"
alias gtl="git log --pretty=oneline"
alias gpo="git push origin"
alias gts="git status"
alias ll="ls -al"
alias jl="jupyter lab"
alias top="btop"
alias codex="aichat --rag codex --session"

ff() {
  sudo find /Applications /Library /System/Library /Users/$(whoami)/Library /private/var/folders -iname "*$1*" 2>&1 | grep -v 'Operation not permitted'
}

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
nvm use default

# SDKMAN initialization
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
sdk default java 21.0.4-amzn
sdk use gradle 8.5

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Load Angular CLI autocompletion.
#source <(ng completion script)

# Amazon Q post block. Keep at the bottom of this file.
# export LUA_PATH="/opt/homebrew/share/lua/5.4/?.lua;;"
export LUA_CPATH="/opt/homebrew/lib/lua/5.4/?.so;;"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
